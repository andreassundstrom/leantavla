@inject HttpClient client
@inject DialogService dialogService

<div class="row nyLapp p-3">
    <div class="col">

        <RedigeraLappAttribut Lapp="NyLapp"></RedigeraLappAttribut>
     

        <div class="row mt-3">
            <RadzenButton Click="(async () => await SparaLapp())">Spara</RadzenButton>
        </div>

        @if (showErrorText)
        {
            <div class="alert alert-danger">
                <strong>Error!</strong> Din lapp kunde inte skapas.
            </div>
        }

        </div>
</div>

@code {
    bool showErrorText = false;
    public Lapp NyLapp { get; set; }

    public Attributtyp[] Attributtyper { get; set; }
    public List<Attribut> LappAttribut { get; set; }

    protected override async Task OnInitializedAsync()
    {
        NyLapp = new Lapp() { Attribut = new List<Attribut>() };
        LappAttribut = new List<Attribut>();
        Attributtyper = await client.GetFromJsonAsync<Attributtyp[]>("api/attributtyp");
        NyLapp.Attribut.AddRange(Attributtyper.Select(p => new Attribut { Attributtyp = p }));
    }
    public async Task SparaLapp()
    {
        var result = await client.PostAsJsonAsync<Lapp>("api/lapp", NyLapp);

        if (result.IsSuccessStatusCode)
        {
            dialogService.Close("success");
        }
        else
        {
            showErrorText = true;
        }

    }
}