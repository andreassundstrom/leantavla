@using Microsoft.AspNetCore.SignalR.Client
@inject AppState appState
@inject HttpClient client
@inject DialogService dialogService
@inject NavigationManager NavigationManager


<div class="row nyLapp p-3">
    <div class="col">

        <RedigeraLappAttribut Lapp="NyLapp"></RedigeraLappAttribut>


        <div class="row mt-3">
            <RadzenButton Click="(async () => await SparaLapp())">Spara</RadzenButton>
        </div>

        @if (showErrorText)
        {
            <div class="alert alert-danger">
                <strong>Error!</strong> Din lapp kunde inte skapas.
            </div>
        }

    </div>
</div>

@code {
    bool showErrorText = false;
    public Lapp NyLapp { get; set; }
    private HubConnection hubConnection;

    public Attributtyp[] Attributtyper { get; set; }
    public List<Attribut> LappAttribut { get; set; }

    protected override async Task OnInitializedAsync()
    {

        NyLapp = new Lapp() { Attribut = new List<Attribut>() };
        LappAttribut = new List<Attribut>();
        Attributtyper = await client.GetFromJsonAsync<Attributtyp[]>($"api/attributtyp?BrädaId={appState.ActiveBoardId.Value}");
        NyLapp.Attribut.AddRange(Attributtyper.Select(p => new Attribut
        {
            Attributtyp = p
        }));
        hubConnection = GetHubConnection();

        await hubConnection.StartAsync();
    }
    public async Task SparaLapp()
    {
        NyLapp.BrädaId = appState.ActiveBoardId.Value;
        var result = await client.PostAsJsonAsync<Lapp>("api/lapp", NyLapp);

        if (result.IsSuccessStatusCode)
        {
            var lappId = await result.Content.ReadAsStringAsync();

            dialogService.Close("success");

           await SendNewLapp(lappId);
        }
        else
        {
            showErrorText = true;
        }

    }
    private HubConnection GetHubConnection()
    {
        HubConnection connection = new HubConnectionBuilder()
      .WithUrl(NavigationManager.ToAbsoluteUri("/lapphub"))
      .Build();

        return connection;
    }

    private async Task SendNewLapp(string lappId)
    {
        var lapp = await client.GetFromJsonAsync<Lapp>($"api/lapp/{lappId}");
        await hubConnection.SendAsync("SkickaLapp", lapp);
    }

}