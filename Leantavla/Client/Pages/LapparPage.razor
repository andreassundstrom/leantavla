@inject HttpClient client
@page "/lappar"
@using Leantavla.Client
<style>
    * {
        box-sizing: border-box;
    }
    
    /* Create three equal columns that floats next to each other */
    .column {
        float: left !important;
        width: @columnWidth;
        padding: 10px !important;
        height: 80vh !important;
    }

    /* Clear floats after the columns */
    .row:after {
        content: "";
        display: table;
        clear: both;
    }

</style>
<h3>Leanlappar</h3>

@if (columnWidth is not null)
{
  

        @foreach (Status status in Statusar)
        {
        <DropTarget T="Lapp" Drop="@(async e => await OnDrop(e,status))">
            <div class="column" style="background-color:#aaa;">
                <h2>@status.StatusNamn</h2>

                @if (Lappar is not null)
                {
                    @foreach (Lapp lapp in Lappar.Where(e => e.Status.StatusId == status.StatusId))
                    {
                        <Draggable Data="lapp">
                                <LappComponent Lapp="lapp"></LappComponent>
                        </Draggable>
                        
                    }
                }

            </div>
</DropTarget>
 
        }
   
}



@code {
    string columnWidth { get; set; }
    public List<Lapp> Lappar { get; set; }
    public Attributtyp[] Attributtyper { get; set; }

    List<Status> Statusar { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetLappar();
        Attributtyper = await client.GetFromJsonAsync<Attributtyp[]>("api/attributtyp");
        Statusar = await client.GetFromJsonAsync<List<Status>>("api/attributtyp/status");
        GetColumnWidth();
    }

    private async Task GetLappar()
    {
        Lappar = await client.GetFromJsonAsync<List<Lapp>>("api/lapp");
    }

    private void GetColumnWidth()
    {
        int result = 100 / Statusar.Count();

        columnWidth = $"{result}%";
    }

    private async Task OnDrop(Lapp data,Status status)
    {

        var lapp = Lappar.FirstOrDefault(e => e.LappId == data.LappId);
        if(lapp is not null)
        {
            lapp.StatusId = status.StatusId;
            await client.PutAsJsonAsync<Lapp>("api/lapp", lapp);

        }
        await GetLappar();
        StateHasChanged();
    }
}
